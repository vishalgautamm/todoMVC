var _user$project$Main$styles = '\n    html,\n    body {\n        margin: 0;\n      padding: 0;\n    }\n\n    button {\n        margin: 0;\n      padding: 0;\n      border: 0;\n      background: none;\n      font-size: 100%;\n      vertical-align: baseline;\n      font-family: inherit;\n      font-weight: inherit;\n      color: inherit;\n      -webkit-appearance: none;\n      appearance: none;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    body {\n      font: 14px \'Helvetica Neue\', Helvetica, Arial, sans-serif;\n      line-height: 1.4em;\n      background: #f5f5f5;\n      color: #4d4d4d;\n      min-width: 230px;\n      max-width: 550px;\n      margin: 0 auto;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      font-weight: 300;\n    }\n\n    :focus {\n      outline: 0;\n    }\n\n    .hidden {\n      display: none;\n    }\n\n    .todoapp {\n      background: #fff;\n      margin: 130px 0 40px 0;\n      position: relative;\n      box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2),\n                  0 25px 50px 0 rgba(0, 0, 0, 0.1);\n    }\n\n    .todoapp input::-webkit-input-placeholder {\n      font-style: italic;\n      font-weight: 300;\n      color: #e6e6e6;\n    }\n\n    .todoapp input::-moz-placeholder {\n      font-style: italic;\n      font-weight: 300;\n      color: #e6e6e6;\n    }\n\n    .todoapp input::input-placeholder {\n      font-style: italic;\n      font-weight: 300;\n      color: #e6e6e6;\n    }\n\n    .todoapp h1 {\n      position: absolute;\n      top: -155px;\n      width: 100%;\n      font-size: 100px;\n      font-weight: 100;\n      text-align: center;\n      color: rgba(175, 47, 47, 0.15);\n      -webkit-text-rendering: optimizeLegibility;\n      -moz-text-rendering: optimizeLegibility;\n      text-rendering: optimizeLegibility;\n    }\n\n    .new-todo,\n    .edit {\n      position: relative;\n      margin: 0;\n      width: 100%;\n      font-size: 24px;\n      font-family: inherit;\n      font-weight: inherit;\n      line-height: 1.4em;\n      border: 0;\n      color: inherit;\n      padding: 6px;\n      border: 1px solid #999;\n      box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n      box-sizing: border-box;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    .new-todo {\n      padding: 16px 16px 16px 60px;\n      border: none;\n      background: rgba(0, 0, 0, 0.003);\n      box-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);\n    }\n\n    .main {\n      position: relative;\n      z-index: 2;\n      border-top: 1px solid #e6e6e6;\n    }\n\n    .toggle-all {\n      text-align: center;\n      border: none; /* Mobile Safari */\n      opacity: 0;\n      position: absolute;\n    }\n\n    .toggle-all + label {\n      width: 60px;\n      height: 34px;\n      font-size: 0;\n      position: absolute;\n      top: -52px;\n      left: -13px;\n      -webkit-transform: rotate(90deg);\n      transform: rotate(90deg);\n    }\n\n    .toggle-all + label:before {\n      content: \'❯\';\n      font-size: 22px;\n      color: #e6e6e6;\n      padding: 10px 27px 10px 27px;\n    }\n\n    .toggle-all:checked + label:before {\n      color: #737373;\n    }\n\n    .todo-list {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n    }\n\n    .todo-list li {\n      position: relative;\n      font-size: 24px;\n      border-bottom: 1px solid #ededed;\n    }\n\n    .todo-list li:last-child {\n      border-bottom: none;\n    }\n\n    .todo-list li.editing {\n      border-bottom: none;\n      padding: 0;\n    }\n\n    .todo-list li.editing .edit {\n      display: block;\n      width: 506px;\n      padding: 12px 16px;\n      margin: 0 0 0 43px;\n    }\n\n    .todo-list li.editing .view {\n      display: none;\n    }\n\n    .todo-list li .toggle {\n      text-align: center;\n      width: 40px;\n      /* auto, since non-WebKit browsers doesn\'t support input styling */\n      height: auto;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      margin: auto 0;\n      border: none; /* Mobile Safari */\n      -webkit-appearance: none;\n      appearance: none;\n    }\n\n    .todo-list li .toggle {\n      opacity: 0;\n    }\n\n    .todo-list li .toggle + label {\n      /*\n        Firefox requires `#` to be escaped - https://bugzilla.mozilla.org/show_bug.cgi?id=922433\n        IE and Edge requires *everything* to be escaped to render, so we do that instead of just the `#` - https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7157459/\n      */\n      background-image: url(\'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23ededed%22%20stroke-width%3D%223%22/%3E%3C/svg%3E\');\n      background-repeat: no-repeat;\n      background-position: center left;\n    }\n\n    .todo-list li .toggle:checked + label {\n      background-image: url(\'data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23bddad5%22%20stroke-width%3D%223%22/%3E%3Cpath%20fill%3D%22%235dc2af%22%20d%3D%22M72%2025L42%2071%2027%2056l-4%204%2020%2020%2034-52z%22/%3E%3C/svg%3E\');\n    }\n\n    .todo-list li label {\n      word-break: break-all;\n      padding: 15px 15px 15px 60px;\n      display: block;\n      line-height: 1.2;\n      transition: color 0.4s;\n    }\n\n    .todo-list li.completed label {\n      color: #1F8278;\n      text-decoration: line-through;\n    }\n\n    .todo-list li .destroy {\n      display: none;\n      position: absolute;\n      top: 0;\n      right: 10px;\n      bottom: 0;\n      width: 40px;\n      height: 40px;\n      margin: auto 0;\n      font-size: 30px;\n      color: #cc9a9a;\n      margin-bottom: 11px;\n      transition: color 0.2s ease-out;\n    }\n\n    .todo-list li .destroy:hover {\n      color: #af5b5e;\n    }\n\n    .todo-list li .destroy:after {\n      content: \'×\';\n    }\n\n    .todo-list li:hover .destroy {\n      display: block;\n    }\n\n    .todo-list li .edit {\n      display: none;\n    }\n\n    .todo-list li.editing:last-child {\n      margin-bottom: -1px;\n    }\n\n    .footer {\n      color: #777;\n      padding: 10px 15px;\n      height: 20px;\n      text-align: center;\n      border-top: 1px solid #e6e6e6;\n    }\n\n    .footer:before {\n      content: \'\';\n      position: absolute;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      height: 50px;\n      overflow: hidden;\n      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2),\n                  0 8px 0 -3px #f6f6f6,\n                  0 9px 1px -3px rgba(0, 0, 0, 0.2),\n                  0 16px 0 -6px #f6f6f6,\n                  0 17px 2px -6px rgba(0, 0, 0, 0.2);\n    }\n\n    .todo-count {\n      float: left;\n      text-align: left;\n    }\n\n    .todo-count strong {\n      font-weight: 300;\n    }\n\n    .filters {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n      position: absolute;\n      right: 0;\n      left: 0;\n    }\n\n    .filters li {\n      display: inline;\n    }\n\n    .filters li a {\n      color: inherit;\n      margin: 3px;\n      padding: 3px 7px;\n      text-decoration: none;\n      border: 1px solid transparent;\n      border-radius: 3px;\n    }\n\n    .filters li a:hover {\n      border-color: rgba(175, 47, 47, 0.1);\n    }\n\n    .filters li a.selected {\n      border-color: rgba(175, 47, 47, 0.2);\n    }\n\n    .clear-completed,\n    html .clear-completed:active {\n      float: right;\n      position: relative;\n      line-height: 20px;\n      text-decoration: none;\n      cursor: pointer;\n    }\n\n    .clear-completed:hover {\n      text-decoration: underline;\n    }\n\n    .info {\n      margin: 65px auto 0;\n      color: #bfbfbf;\n      font-size: 10px;\n      text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\n      text-align: center;\n    }\n\n    .info p {\n      line-height: 1;\n    }\n\n    .info a {\n      color: inherit;\n      text-decoration: none;\n      font-weight: 400;\n    }\n\n    .info a:hover {\n      text-decoration: underline;\n    }\n\n    /*\n      Hack to remove background from Mobile Safari.\n      Can\'t use it globally since it destroys checkboxes in Firefox\n    */\n    @media screen and (-webkit-min-device-pixel-ratio:0) {\n      .toggle-all,\n      .todo-list li .toggle {\n        background: none;\n      }\n\n      .todo-list li .toggle {\n        height: 40px;\n      }\n    }\n\n    @media (max-width: 430px) {\n      .footer {\n        height: 50px;\n      }\n\n      .filters {\n        bottom: 10px;\n      }\n    }\n    ';
var _user$project$Main$todoView = function (todo) {
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'completed', _1: todo.completed},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('view'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('toggle'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$checked(todo.completed),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$label,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(todo.title),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('destroy'),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$onEnter = function (msg) {
	var isEnter = function (code) {
		return _elm_lang$core$Native_Utils.eq(code, 13) ? _elm_lang$core$Json_Decode$succeed(msg) : _elm_lang$core$Json_Decode$fail('Not the right keycode');
	};
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$andThen, isEnter, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$Main$mockTodo = {title: 'Sample todo', completed: false, editing: false};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html$node,
				'style',
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text/css'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(_user$project$Main$styles),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$section,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('todoapp'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$header,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('header'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$h1,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Todo Elm'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$input,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('new-todo'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$placeholder('What needs to be done'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$value(model.todo.title),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$autofocus(true),
														_1: {
															ctor: '::',
															_0: _user$project$Main$onEnter(
																_user$project$Models_Model$Add(_user$project$Main$mockTodo)),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$section,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('main'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$ul,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('todo-list'),
											_1: {ctor: '[]'}
										},
										A2(_elm_lang$core$List$map, _user$project$Main$todoView, model.todos)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Add':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						todos: {ctor: '::', _0: _p0._0, _1: model.todos}
					});
			case 'Delete':
				return model;
			case 'Complete':
				return model;
			default:
				return model;
		}
	});
var _user$project$Main$initialModel = {
	todos: {
		ctor: '::',
		_0: {title: 'Learn elm programming', completed: true, editing: false},
		_1: {ctor: '[]'}
	},
	todo: {title: '', completed: false, editing: false},
	filter: _user$project$Models_Model$All
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$initialModel, view: _user$project$Main$view, update: _user$project$Main$update})();
